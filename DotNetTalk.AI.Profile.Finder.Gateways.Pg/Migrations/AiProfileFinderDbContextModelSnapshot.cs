// <auto-generated />
using System;
using DotNetTalk.AI.Profile.Finder.Gateways.Pg;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pgvector;

#nullable disable

namespace DotNetTalk.AI.Profile.Finder.Gateways.Pg.Migrations
{
    [DbContext(typeof(AiProfileFinderDbContext))]
    partial class AiProfileFinderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.CompanyPersistence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Industry")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.InsurancePersistence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("InsuranceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.PersonCompanyPersistence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JobTitleAtCompany")
                        .HasColumnType("text");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonCompanies");
                });

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.PersonPersistence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(768)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FirstName", "LastName");

                    b.ToTable("People");
                });

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.TravelPersistence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DestinationCity")
                        .HasColumnType("text");

                    b.Property<string>("DestinationCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Purpose")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Travels");
                });

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.InsurancePersistence", b =>
                {
                    b.HasOne("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.PersonPersistence", "Person")
                        .WithMany("Insurances")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.PersonCompanyPersistence", b =>
                {
                    b.HasOne("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.CompanyPersistence", "Company")
                        .WithMany("PersonCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.PersonPersistence", "Person")
                        .WithMany("PersonCompanies")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.TravelPersistence", b =>
                {
                    b.HasOne("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.PersonPersistence", "Person")
                        .WithMany("Travels")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.CompanyPersistence", b =>
                {
                    b.Navigation("PersonCompanies");
                });

            modelBuilder.Entity("DotNetTalk.AI.Profile.Finder.Gateways.Pg.Models.PersonPersistence", b =>
                {
                    b.Navigation("Insurances");

                    b.Navigation("PersonCompanies");

                    b.Navigation("Travels");
                });
#pragma warning restore 612, 618
        }
    }
}
